realization LinearIterativeEndConditionBug (function AreEqual (restores i: Item,
                                                               restores j: Item) : control
                                              ensures
                                                AreEqual = (i = j))
  implements Contains for ArrayAsStringTemplate

  function Contains (restores a: Array,
                     restores x: Item) : control
    variable pos: Integer
    variable ub: Integer
    pos := LowerBound(a)
    ub := UpperBound(a)
    if not IsGreater(pos, ub) then
      loop
        maintains a = #a and
                  x = #x and
                  a.lb <= pos and
                  pos <= ub and
                  ub = a.ub and
                  Contains = (x is in elements(substring(a.s, 0, pos - a.lb)))
        decreases ub - pos
      while not Contains and not AreEqual(pos, ub) do
        variable y: Item
        SwapItem(a, pos, y)
        Contains := AreEqual(x, y)
        SwapItem(a, pos, y)
        Increment(pos)
      end loop
    end if
  end Contains

end LinearIterativeEndConditionBug

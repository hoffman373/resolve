realization Recursive
  implements Fibonacci for UnboundedIntegerFacility

  uses Add for UnboundedIntegerFacility
  // lemmas needed
  // 1) FIB(0) = 0, FIB(1) = 1, 0 > i implies FIB i = 0, 0 <= i implies FIB(i+2) = FIB(i) + FIB(i+1)
  // 2) i > 1 implies FIB(i) = FIB(i - 1) + FIB(i - 2)
  // 3) 0 <= i and i <= 1 implies i = 0 or i = 1

  procedure Fibonacci (restores i: Integer,
                       replaces j: Integer)
    decreases i
    variable one: Integer
    Increment(one)
    if IsGreater(i, one) then
      variable iMinusOne, iMinusOneVal, iMinusTwo, iMinusTwoVal: Integer
      iMinusOne := Replica(i)
      Decrement(iMinusOne)
      iMinusTwo := Replica(iMinusOne)
      Decrement(iMinusTwo)
      // Recur
      Fibonacci(iMinusOne, iMinusOneVal)
      Fibonacci(iMinusTwo, iMinusTwoVal)
      Add(iMinusOneVal, iMinusTwoVal)
      j :=: iMinusOneVal
    else
      j := Replica(i)
    end if
  end Fibonacci

end Recursive

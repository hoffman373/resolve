realization Obvious (function AreInOrder (restores x: Item,
                                          restores y: Item) : control
                       ensures
                         AreInOrder = ARE_IN_ORDER(x, y))
  implements CompareAtPositions for SequenceWithSubstringTemplate

  uses IsNegative for UnboundedIntegerFacility

  function CompareAtPositions (restores s: Sequence,
                               restores x: Integer,
                               restores y: Integer) : control
    variable len: Integer
    len := Length(s)
    if IsGreater(len, x) and not IsNegative(x) and IsGreater(len, y) and not IsNegative(y) and not AreEqual(x, y)
    then
      variable a, b: Item
      Swap(s, x, a)
      Swap(s, y, b)
      CompareAtPositions := AreInOrder(a, b)
      Swap(s, y, b)
      Swap(s, x, a)
    end if
  end CompareAtPositions

end Obvious
